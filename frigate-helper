#!/bin/bash

# --- Pr√ºfen, ob whiptail installiert ist ---
if ! command -v whiptail &> /dev/null; then
    echo "whiptail wird ben√∂tigt. Installiere es..."
    apt update && apt install -y whiptail
fi

# --- Debian-Template pr√ºfen/Download ---
TEMPLATES=($(ls /var/lib/vz/template/cache/debian-*-standard_*.tar.zst 2>/dev/null))
if [ ${#TEMPLATES[@]} -eq 0 ]; then
    echo "Kein Debian-Template gefunden. Lade Standard Debian 12 Template..."
    wget -O /var/lib/vz/template/cache/debian-12-standard_12.11-1_amd64.tar.zst \
        https://download.proxmox.com/iso/debian-12-standard_12.11-1_amd64.tar.zst
    TEMPLATES=($(ls /var/lib/vz/template/cache/debian-*-standard_*.tar.zst))
fi

# --- Template-Auswahl ---
TEMPLATE=$(whiptail --title "Debian Template ausw√§hlen" --menu "W√§hle ein Template:" 15 60 4 \
$(for t in "${TEMPLATES[@]}"; do echo "$t $(basename $t)"; done) \
3>&1 1>&2 2>&3)

# --- Storage-Auswahl ---
STORAGES=($(pvesm status | awk 'NR>1 {print $1}'))
STORAGE=$(whiptail --title "Storage ausw√§hlen" --menu "W√§hle Storage:" 15 60 4 \
$(for s in "${STORAGES[@]}"; do echo "$s $s"; done) \
3>&1 1>&2 2>&3)

# --- CTID und Hostname ---
CTID=$(whiptail --title "Container ID" --inputbox "Gib die CTID ein:" 8 40 "112" 3>&1 1>&2 2>&3)
HOSTNAME="frigate-$CTID"

# --- Root Passwort ---
ROOTPW=$(whiptail --title "Root Passwort" --passwordbox "Bitte Root-Passwort f√ºr den Container eingeben:" 8 40 3>&1 1>&2 2>&3)

# --- IP-Konfiguration ---
IP_MODE=$(whiptail --title "Netzwerk Modus" --menu "IP-Modus w√§hlen:" 15 60 4 \
"dhcp" "DHCP" \
"static" "Feste IP" \
3>&1 1>&2 2>&3)

if [ "$IP_MODE" == "static" ]; then
    IP=$(whiptail --title "Feste IP" --inputbox "Gib die IP ein:" 8 40 "192.168.1.100/24" 3>&1 1>&2 2>&3)
    GATEWAY=$(whiptail --title "Gateway" --inputbox "Gib das Gateway ein:" 8 40 "192.168.1.1" 3>&1 1>&2 2>&3)
fi

# --- Container erstellen ---
echo "Erstelle LXC Container..."
if [ "$IP_MODE" == "dhcp" ]; then
    pct create $CTID $TEMPLATE --storage $STORAGE --net0 name=eth0,bridge=vmbr0,ip=dhcp --ostype debian --hostname $HOSTNAME --features nesting=1
else
    pct create $CTID $TEMPLATE --storage $STORAGE --net0 name=eth0,bridge=vmbr0,ip=$IP,gw=$GATEWAY --ostype debian --hostname $HOSTNAME --features nesting=1
fi

# --- Root Passwort setzen ---
pct set $CTID --password "$ROOTPW"

# --- Container starten ---
pct start $CTID

# --- Docker & Frigate Installation + SSH Setup ---
echo "Installiere Docker, SSH und Frigate im Container..."
pct exec $CTID -- bash -c "
apt update
apt install -y locales curl gnupg lsb-release git openssh-server

# Locale fix
locale-gen en_US.UTF-8
update-locale LANG=en_US.UTF-8
export LANG=en_US.UTF-8

# Root-Login per SSH erlauben
sed -i 's/^#\?PermitRootLogin.*/PermitRootLogin yes/' /etc/ssh/sshd_config
sed -i 's/^#\?PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config
systemctl enable ssh
systemctl restart ssh

# Docker installieren
curl -fsSL https://get.docker.com | sh

# Docker Compose installieren
if ! command -v docker-compose &> /dev/null; then
    curl -L \"https://github.com/docker/compose/releases/download/v2.25.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
fi

# Frigate klonen
if [ ! -d /opt/frigate ]; then
    git clone https://github.com/sebrosch/frigate.git /opt/frigate --branch main
fi

# Frigate starten
cd /opt/frigate
docker-compose up -d
"

# --- Host-Aufr√§umen (ohne Templates l√∂schen) ---
echo "üîπ Starte Aufr√§umen auf dem Host..."
rm -rf /opt/frigate
echo "‚úÖ Host-Aufr√§umen abgeschlossen."

# --- Fertig ---
echo "Frigate l√§uft jetzt im Container $CTID."
if [ "$IP_MODE" == "static" ]; then
    echo "Zugriff: http://${IP%/*}:5000"
    echo "SSH: ssh root@${IP%/*}"
else
    echo "Zugriff: http://<DHCP-IP>:5000"
    echo "SSH: ssh root@<DHCP-IP>"
fi
