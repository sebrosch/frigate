#!/bin/bash
set -euo pipefail

CTID=112
TEMPLATE="debian-12-standard_12.11-1_amd64.tar.zst"
TEMPLATE_URL="https://download.proxmox.com/images/system/$TEMPLATE"

function check_template() {
  echo "üîπ Pr√ºfe Debian Template..."
  if [ ! -f "/var/lib/vz/template/cache/$TEMPLATE" ]; then
    echo "‚ö†Ô∏è  Template fehlt ‚Äì lade herunter..."
    cd /var/lib/vz/template/cache
    wget -O "$TEMPLATE" "$TEMPLATE_URL"
  else
    echo "‚úÖ Template vorhanden."
  fi
}

function create_container() {
  echo "üîπ Erstelle LXC Container $CTID..."
  pct create $CTID /var/lib/vz/template/cache/$TEMPLATE \
    -hostname frigate-$CTID \
    -cores 2 -memory 2048 -swap 512 \
    -net0 name=eth0,bridge=vmbr0,ip=dhcp \
    -rootfs local-lvm:4 \
    -features nesting=1 \
    -onboot 1 -start 1

  echo "üîπ Setze Root Passwort..."
  read -s -p "Bitte Root-Passwort eingeben: " ROOTPW
  echo
  echo -e "$ROOTPW\n$ROOTPW" | pct passwd $CTID
}

function install_inside_container() {
  echo "üîπ Installiere Docker, docker-compose und Frigate im Container..."
  pct exec $CTID -- bash -c "
    apt update &&
    apt install -y docker.io docker-compose git curl jq &&
    mkdir -p /opt &&
    git clone https://github.com/sebrosch/frigate.git /opt/frigate --branch main &&
    chmod +x /opt/frigate/frigate-helper
  "
}

function start_frigate() {
  echo "üîπ Starte Frigate im Container..."
  pct exec $CTID -- bash -c "
    cd /opt/frigate &&
    docker-compose up -d
  "
}

function cleanup_host() {
  echo "üîπ Starte Aufr√§umen auf dem Host..."
  rm -rf /opt/frigate || true
  echo "‚úÖ Host-Aufr√§umen abgeschlossen."
}

### MAIN ###
case "${1:-}" in
  create-interactive)
    check_template
    create_container
    install_inside_container
    start_frigate
    cleanup_host
    echo "‚úÖ Frigate l√§uft jetzt im Container $CTID."
    echo "   Zugriff: http://<DHCP-IP>:5000"
    echo "   SSH:     ssh root@<DHCP-IP>"
    ;;
  *)
    echo "Usage: $0 create-interactive"
    ;;
esac
