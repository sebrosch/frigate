#!/bin/bash

# -----------------------------------------------
# Frigate Helper f√ºr Proxmox
# -----------------------------------------------

# Pr√ºfen, ob whiptail installiert ist
if ! command -v whiptail &> /dev/null; then
    echo "whiptail wird ben√∂tigt. Installiere es..."
    apt update && apt install -y whiptail
fi

# SSH Passwort f√ºr Container abfragen
CONTAINER_PASSWORD=$(whiptail --title "SSH Passwort" --passwordbox "Bitte gib das gew√ºnschte SSH Passwort f√ºr den Container ein:" 10 60 3>&1 1>&2 2>&3)

# Storage ausw√§hlen
STORAGES=($(pvesm status | awk 'NR>1 {print $1}'))
STORAGE=$(whiptail --title "Storage ausw√§hlen" --menu "W√§hle einen Storage f√ºr den Container:" 15 60 4 \
$(for s in "${STORAGES[@]}"; do echo "$s $s"; done) \
3>&1 1>&2 2>&3)

# CTID ausw√§hlen
CTID=$(whiptail --title "Container ID" --inputbox "Gib die CTID f√ºr den neuen Container ein:" 8 40 "112" 3>&1 1>&2 2>&3)

# IP-Modus ausw√§hlen
IP_MODE=$(whiptail --title "Netzwerk Modus" --menu "W√§hle IP-Konfiguration:" 15 60 4 \
"dhcp" "DHCP" \
"static" "Feste IP" \
3>&1 1>&2 2>&3)

if [ "$IP_MODE" == "static" ]; then
    IP=$(whiptail --title "Feste IP" --inputbox "Gib die feste IP-Adresse f√ºr den Container ein:" 8 40 "192.168.1.100/24" 3>&1 1>&2 2>&3)
    GATEWAY=$(whiptail --title "Gateway" --inputbox "Gib das Gateway ein:" 8 40 "192.168.1.1" 3>&1 1>&2 2>&3)
fi

# Debian-Template pr√ºfen / herunterladen
TEMPLATE_DIR="/var/lib/vz/template/cache"
DEBIAN_TEMPLATE=$(ls $TEMPLATE_DIR/debian-*-standard_*.tar.zst 2>/dev/null | head -n 1)

if [ -z "$DEBIAN_TEMPLATE" ]; then
    echo "Kein Debian-Template gefunden. Lade es automatisch herunter..."
    pveam update
    pveam download local debian-12-standard_12.7-1_amd64
    DEBIAN_TEMPLATE=$(ls $TEMPLATE_DIR/debian-*-standard_*.tar.zst 2>/dev/null | head -n 1)
    if [ -z "$DEBIAN_TEMPLATE" ]; then
        echo "Fehler: Template konnte nicht heruntergeladen werden."
        exit 1
    fi
fi

# Container erstellen
echo "Erstelle LXC Container..."
if [ "$IP_MODE" == "dhcp" ]; then
    pct create $CTID $DEBIAN_TEMPLATE --storage $STORAGE --net0 name=eth0,bridge=vmbr0,ip=dhcp --ostype debian --hostname frigate-$CTID --features nesting=1 --password $CONTAINER_PASSWORD
else
    pct create $CTID $DEBIAN_TEMPLATE --storage $STORAGE --net0 name=eth0,bridge=vmbr0,ip=$IP,gw=$GATEWAY --ostype debian --hostname frigate-$CTID --features nesting=1 --password $CONTAINER_PASSWORD
fi

# Container starten
pct start $CTID

# Docker und Frigate installieren
echo "Installiere Docker im Container..."
pct exec $CTID -- bash -c "apt update && apt install -y curl gnupg lsb-release && curl -fsSL https://get.docker.com | sh"

echo "Klonen Frigate-Repository im Container..."
pct exec $CTID -- bash -c "mkdir -p /opt && git clone https://github.com/sebrosch/frigate.git /opt/frigate --branch main"

echo "Frigate im Container starten..."
pct exec $CTID -- bash -c "cd /opt/frigate && docker-compose up -d"

# Host aufr√§umen
echo "üîπ Starte Aufr√§umen auf dem Host..."
rm -rf /opt/frigate
rm -f /var/lib/vz/template/cache/debian-12-standard_12.7-1_amd64.tar.zst
echo "‚úÖ Host-Aufr√§umen abgeschlossen."

echo "Frigate l√§uft jetzt im Container $CTID."
echo "Zugriff: http://<IP>:5000"
