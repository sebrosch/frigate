#!/bin/bash
set -e

echo "=== Geführte Frigate Installation auf Proxmox LXC ==="

# 1️⃣ LXC-Parameter abfragen
read -p "ID des neuen Containers (z.B. 112): " CTID
read -p "Name des Containers: " CTNAME
read -p "Speicherplatz in GB (z.B. 8): " CTDISK
read -p "RAM in MB (z.B. 2048): " CTRAM
read -p "CPU cores (z.B. 2): " CTCPU
read -p "Netzwerk-Bridge (z.B. vmbr0): " CTBRIDGE
read -p "IP-Adresse des Containers (z.B. 192.168.1.100/24): " CTIP

# 2️⃣ Prüfen, ob Template vorhanden ist
TEMPLATE="/var/lib/vz/template/cache/debian-12-standard_12.7-1_amd64.tar.zst"
if [ ! -f "$TEMPLATE" ]; then
    echo "Template nicht gefunden. Lade herunter..."
    wget -O "$TEMPLATE" "https://downloads.proxmox.com/vztmpl/debian-12-standard_12.7-1_amd64.tar.zst"
fi

# 3️⃣ LXC erstellen
echo "Erstelle Container $CTID..."
pct create $CTID local:vztmpl/debian-12-standard_12.7-1_amd64.tar.zst \
  -hostname $CTNAME \
  -cores $CTCPU \
  -memory $CTRAM \
  -net0 name=eth0,bridge=$CTBRIDGE,ip=$CTIP \
  -rootfs local-lvm:$CTDISK \
  -features nesting=1

pct start $CTID
echo "Container gestartet."

# 4️⃣ Pakete im Container installieren
echo "Installiere Docker und Abhängigkeiten im Container..."
pct exec $CTID -- bash -c "
apt update &&
apt install -y git jq lsb-release curl docker.io docker-compose
"

# 5️⃣ Frigate klonen
echo "Klonen von Frigate..."
pct exec $CTID -- bash -c "
rm -rf /opt/frigate &&
git clone https://github.com/sebrosch/frigate.git /opt/frigate --branch main &&
chmod +x /opt/frigate/frigate-helper
"

# 6️⃣ Frigate starten
echo "Starte Frigate im Container..."
pct exec $CTID -- bash -c "
cd /opt/frigate &&
docker-compose up -d
"

echo "✅ Frigate läuft im Container $CTID"
echo "Zugriff auf die WebUI: http://${CTIP%/*}:5000"
