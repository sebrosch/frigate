#!/bin/bash
set -e

echo "=== Frigate LXC Helper ==="

# 1️⃣ Eingaben abfragen
read -p "Container-ID (CTID) eingeben: " CTID
echo
echo "Verfügbare Debian Templates:"
ls /var/lib/vz/template/cache/debian-*.tar.zst
read -p "Template auswählen: " TEMPLATE
read -p "Storage auswählen (z.B. local, data): " STORAGE

echo
read -p "Netzwerktyp eingeben (dhcp/statisch): " NET_TYPE
if [ "$NET_TYPE" == "statisch" ]; then
    read -p "IP-Adresse eingeben (z.B. 192.168.1.100/24): " STATIC_IP
    read -p "Gateway eingeben (z.B. 192.168.1.1): " GATEWAY
fi

# 2️⃣ Container erstellen
echo "=== Erstelle LXC Container $CTID mit Template $TEMPLATE auf Storage $STORAGE ==="
if [ "$NET_TYPE" == "dhcp" ]; then
    pct create $CTID /var/lib/vz/template/cache/$TEMPLATE -storage $STORAGE -net0 name=eth0,bridge=vmbr0
else
    pct create $CTID /var/lib/vz/template/cache/$TEMPLATE -storage $STORAGE -net0 name=eth0,bridge=vmbr0,ip=$STATIC_IP,gw=$GATEWAY
fi

pct start $CTID
echo "Container gestartet. Warte 5 Sekunden..."
sleep 5

# 3️⃣ Netzwerkprüfung
echo "=== Prüfe Netzwerk im Container ==="
if ! pct exec $CTID -- ping -c 1 8.8.8.8 &>/dev/null; then
    echo "Keine Netzwerkverbindung erkannt. Bitte Netzwerkkonfiguration überprüfen."
    exit 1
fi

if ! pct exec $CTID -- ping -c 1 deb.debian.org &>/dev/null; then
    echo "DNS Problem erkannt – setze Google DNS automatisch"
    pct exec $CTID -- bash -c 'echo "nameserver 8.8.8.8" > /etc/resolv.conf'
fi

# 4️⃣ Docker Installation
echo "=== Installiere Docker im Container ==="
pct exec $CTID -- bash -c "apt update && apt install -y curl gnupg lsb-release"
pct exec $CTID -- bash -c "curl -fsSL https://get.docker.com | sh"

# 5️⃣ Optional Frigate starten
echo
read -p "Frigate im Container direkt starten? (j/n): " START_FRIGATE
if [ "$START_FRIGATE" == "j" ]; then
    pct exec $CTID -- bash -c "docker run -d --name frigate -p 5000:5000 blakeblackshear/frigate:st
