#!/bin/bash

# whiptail installieren falls nicht vorhanden
if ! command -v whiptail &> /dev/null; then
    apt update && apt install -y whiptail
fi

# Schritt 1: Template pr√ºfen oder herunterladen
TEMPLATE_DIR="/var/lib/vz/template/cache"
TEMPLATE_FILE=$(ls $TEMPLATE_DIR/debian-*-standard_*.tar.zst 2>/dev/null | head -n1)

if [ -z "$TEMPLATE_FILE" ]; then
    echo "Kein Debian-Template gefunden. Lade Standard Debian 12 Template..."
    wget -P $TEMPLATE_DIR https://downloads.openvz.org/template/precreated/debian-12.11-standard_12.11-1_amd64.tar.zst
    TEMPLATE_FILE=$(ls $TEMPLATE_DIR/debian-*-standard_*.tar.zst | head -n1)
fi

# Template ausw√§hlen (falls mehrere vorhanden)
TEMPLATE=$(whiptail --title "Debian Template ausw√§hlen" --menu "W√§hle ein Template f√ºr den Container:" 15 60 4 \
$(for t in $(ls $TEMPLATE_DIR/debian-*-standard_*.tar.zst); do echo "$t $(basename $t)"; done) \
3>&1 1>&2 2>&3)

# Schritt 2: Storage ausw√§hlen
STORAGE=$(whiptail --title "Storage ausw√§hlen" --inputbox "Gib den Storage f√ºr den Container ein:" 8 40 "local-lvm" 3>&1 1>&2 2>&3)

# Schritt 3: CTID festlegen
CTID=$(whiptail --title "Container ID" --inputbox "Gib die CTID f√ºr den neuen Container ein:" 8 40 "112" 3>&1 1>&2 2>&3)

# Schritt 4: IP-Modus ausw√§hlen
IP_MODE=$(whiptail --title "Netzwerk Modus" --menu "W√§hle IP-Konfiguration:" 15 60 4 \
"dhcp" "DHCP" \
"static" "Feste IP" \
3>&1 1>&2 2>&3)

if [ "$IP_MODE" == "static" ]; then
    IP=$(whiptail --title "Feste IP" --inputbox "Gib die feste IP-Adresse ein:" 8 40 "192.168.1.100/24" 3>&1 1>&2 2>&3)
    GATEWAY=$(whiptail --title "Gateway" --inputbox "Gib das Gateway ein:" 8 40 "192.168.1.1" 3>&1 1>&2 2>&3)
fi

# Schritt 5: optionales SSH-Passwort
SET_SSH=$(whiptail --title "SSH Passwort" --yesno "M√∂chtest du ein SSH Passwort setzen?" 8 60 3>&1 1>&2 2>&3)
if [ $? -eq 0 ]; then
    SSHPASS=$(whiptail --title "SSH Passwort" --passwordbox "Gib ein SSH Passwort ein:" 8 40 3>&1 1>&2 2>&3)
fi

# Schritt 6: Container erstellen
if [ "$IP_MODE" == "dhcp" ]; then
    pct create $CTID $TEMPLATE --storage $STORAGE --net0 name=eth0,bridge=vmbr0,ip=dhcp --ostype debian --hostname frigate-$CTID --features nesting=1
else
    pct create $CTID $TEMPLATE --storage $STORAGE --net0 name=eth0,bridge=vmbr0,ip=$IP,gw=$GATEWAY --ostype debian --hostname frigate-$CTID --features nesting=1
fi

# Schritt 7: SSH Passwort setzen falls gew√§hlt
if [ ! -z "$SSHPASS" ]; then
    pct set $CTID --password $SSHPASS
fi

# Schritt 8: Container starten
pct start $CTID

# Schritt 9: Docker und Docker Compose Plugin installieren
pct exec $CTID -- bash -c "apt update && apt install -y curl gnupg lsb-release && curl -fsSL https://get.docker.com | sh && apt install -y docker-compose-plugin"

# Schritt 10: Frigate klonen
pct exec $CTID -- bash -c "mkdir -p /opt && git clone https://github.com/sebrosch/frigate.git /opt/frigate --branch main"

# Schritt 11: Frigate starten
pct exec $CTID -- bash -c "cd /opt/frigate && docker compose up -d"

# Schritt 12: Host-Aufr√§umen (nur tempor√§re Dateien)
echo "üîπ Starte Aufr√§umen auf dem Host..."
rm -rf /opt/frigate
echo "‚úÖ Host-Aufr√§umen abgeschlossen."

echo "Frigate l√§uft jetzt im Container $CTID."
echo "Zugriff: http://<IP>:5000"
